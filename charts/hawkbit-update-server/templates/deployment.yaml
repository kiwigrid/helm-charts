apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hawkbit-update-server.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "hawkbit-update-server.name" . }}
    helm.sh/chart: {{ include "hawkbit-update-server.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hawkbit-update-server.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hawkbit-update-server.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print .Template.BasePath "/secrets.yaml") . | sha256sum }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: "SPRING_DATASOURCE_URL"
              value: "jdbc:mysql://{{ if .Values.useMysql }}{{ .Release.Name }}-mysql{{ else }}{{ .Values.env.springDatasourceHost }}{{ end }}:3306/{{ .Values.env.springDatasourceDb }}"
            - name: "SPRING_DATASOURCE_USERNAME"
              value: "{{ .Values.env.springDatasourceUsername }}"
            - name: "SPRING_DATASOURCE_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ template "hawkbit-update-server.fullname" . }}-mysql-pass"
                  key: "mysql-pass"
            - name: "SPRING_RABBITMQ_HOST"
              value: "{{ if .Values.useRabbitmq }}{{ .Release.Name }}-rabbitmq{{ else }}{{ .Values.env.springRabbitmqHost }}{{ end }}"
            - name: "SPRING_RABBITMQ_USERNAME"
              value: "{{ .Values.env.springRabbitmqUsername }}"
            - name: "SPRING_RABBITMQ_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ template "hawkbit-update-server.fullname" . }}-rabbitmq-pass"
                  key: "rabbitmq-pass"
            - name: "SPRING_SECURITY_USER_NAME"
              value: "{{ .Values.env.springSecurityUserName}}"
            - name: "SPRING_SECURITY_USER_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "{{ template "hawkbit-update-server.fullname" . }}-hawkbit-pass"
                  key: "hawkbit-pass"
            {{- if .Values.oidc.enabled }}
            - name: "spring.security.oauth2.client.registration.oidc.client-id"
              value: "{{ .Values.oidc.clientId }}"
            - name: "spring.security.oauth2.client.registration.oidc.client-secret"
              valueFrom:
                secretKeyRef:
                  name: "{{ template "hawkbit-update-server.fullname" . }}-oidc-client-secret"
                  key: "oidc-client-secret"
            - name: "spring.security.oauth2.client.provider.oidc.issuer-uri"
              value: "{{ .Values.oidc.issuerUri }}"
            - name: "spring.security.oauth2.client.provider.oidc.authorization-uri"
              value: "{{ .Values.oidc.authorizationUri }}"
            - name: "spring.security.oauth2.client.provider.oidc.token-uri"
              value: "{{ .Values.oidc.tokenUri }}"
            - name: "spring.security.oauth2.client.provider.oidc.user-info-uri"
              value: "{{ .Values.oidc.userInfoUri }}"
            - name: "spring.security.oauth2.client.provider.oidc.jwk-set-uri"
              value: "{{ .Values.oidc.jwkSetUri }}"
            {{- end }}
            {{- range $key, $value := .Values.extraEnv }}
            - name: "{{ $key }}"
              value: "{{ $value }}"
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /VAADIN/themes/hawkbit/favicon.ico
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /VAADIN/themes/hawkbit/favicon.ico
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
