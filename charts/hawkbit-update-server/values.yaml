# use dependency charts
useMysql: true
useRabbitmq: true

image:
  repository: "hawkbit/hawkbit-update-server"
  tag: 0.2.5-mysql
  pullPolicy: IfNotPresent

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

livenessProbe:
  initialDelaySeconds: 240
  timeoutSeconds: 5
readinessProbe:
  initialDelaySeconds: 120
  timeoutSeconds: 5

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: 200m
  paths: []
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# env vars for configuration
env:
  springDatasourceHost: "hawkbit-update-server-mysql"
  springDatasourceUsername: "hawkbit"
  springDatasourcePassword: "hawkbit"
  springDatasourceDb: "hawkbit"
  springRabbitmqHost: "hawkbit-update-server-rabbitmq"
  springRabbitmqUsername: "hawkbit"
  springRabbitmqPassword: "hawkbit"
  securityUserName: "admin"
  # if no password is set a 40 digit random password is created
  securityUserPassword: ""

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

# dependency charts config
mysql:
  mysqlUser: hawkbit
  mysqlPassword: hawkbit
  mysqlDatabase: hawkbit
  metrics:
    enabled: true

rabbitmq:
  rabbitmq:
    username: hawkbit
    password: hawkbit
    metrics:
      enabled: true
