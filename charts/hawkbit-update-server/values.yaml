# use dependency charts
useMysql: true
useRabbitmq: true

image:
  repository: "hawkbit/hawkbit-update-server"
  tag: 0.3.0M5-mysql
  pullPolicy: IfNotPresent

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

livenessProbe:
  initialDelaySeconds: 240
  timeoutSeconds: 5
readinessProbe:
  initialDelaySeconds: 120
  timeoutSeconds: 5

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/proxy-body-size: 200m
  paths: []
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# env vars for configuration
env:
  springDatasourceHost: "hawkbit-update-server-mysql"

  springDatasourceDb: "hawkbit"
  springRabbitmqHost: "hawkbit-update-server-rabbitmq"
  springRabbitmqUsername: "hawkbit"
  springRabbitmqPassword: "hawkbit"
  javaOptions: "-Xms512m -Xmx512m"

# optional env vars
extraEnv: {}
  # JAVA_TOOL_OPTIONS: "-Xms1024m -Xmx1024m"

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 500m
  #  memory: 1536Mi
  # requests:
  #  cpu: 100m
  #  memory: 1024Mi

nodeSelector: {}

tolerations: []

affinity: {}
podTemplate:
  annotations: {}

useActuatorCheck: false
# dependency charts config
mysql:
  mysqlUser: hawkbit
  mysqlPassword: hawkbit
  mysqlDatabase: hawkbit
  metrics:
    enabled: true

rabbitmq:
  rabbitmq:
    username: hawkbit
    password: hawkbit
    metrics:
      enabled: true

extraVolumes: []
extraVolumeMounts: []

configMap:
  mountPath: "/opt/hawkbit/config"

spring:
  profiles: "mysql"
config:
  secrets:
    spring:
      security:
        user:
          password: "{noop}admin"
      datasource:
        username: hawkbit
        password: hawkbit
  application:
    spring:
      security:
        user:
          name: admin
