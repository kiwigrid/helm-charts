apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "keycloak-controller.fullname" . }}
  labels:
{{ include "keycloak-controller.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "keycloak-controller.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "keycloak-controller.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.prometheus.enabled }}
        prometheus.io/scrape: "{{ .Values.prometheus.enabled }}"
        prometheus.io/path: "{{ .Values.prometheus.path }}"
        prometheus.io/port: "{{ .Values.prometheus.port }}"
        {{- end }}
    spec:
      volumes:
      - name: config-volume
        configMap:
          name: {{ include "keycloak-controller.fullname" . }}
      {{- if .Values.rbac.enabled }}
      serviceAccountName: {{ include "keycloak-controller.fullname" . }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /endpoints/health
            port: 8080
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        livenessProbe:
          httpGet:
            path: /endpoints/health
            port: 8080
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
        env:
        - name: JAVA_TOOL_OPTIONS
          value: {{ .Values.javaToolOptions }}
        - name: MICRONAUT_CONFIG_FILES
          value: /kiwigrid/application-k8s.yaml
        {{- if .Values.gcpLogging }}
        - name: GCP_LOGGING
          value: "true"
        {{- end }}
        - name: CONTROLLER_NAMESPACED
          value: {{ .Values.namespaced | quote }}
        volumeMounts:
        - name: config-volume
          mountPath: /kiwigrid/application-k8s.yaml
          subPath: application-k8s.yaml
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
