apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prometheus-thanos.fullname" . }}-querier
  labels:
    app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-querier
    helm.sh/chart: {{ include "prometheus-thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.querier.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-querier
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-querier
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-querier
          imagePullPolicy: {{ .Values.querier.image.pullPolicy }}
          image: "{{ .Values.querier.image.repository }}:{{ .Values.querier.image.tag }}"
          args:
          - query
          - --log.level={{ .Values.querier.logLevel }}
          - --query.replica-label={{ .Values.querier.replicaLabel }}
          {{- if .Values.querier.cluster.disable }}
          - --cluster.disable
          {{- end }}
          {{- range .Values.querier.stores }}
          - --store={{ . }}
          {{- end }}
          {{- range $key, $value := .Values.querier.additionalFlags }}
          - --{{ $key }}={{ $value }}
          {{- end }}
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
            - name: grpc
              containerPort: 10901
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: {{ .Values.querier.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.querier.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.querier.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.querier.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /-/healthy
              port: http
            initialDelaySeconds: {{ .Values.querier.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.querier.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.querier.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.querier.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.querier.resources | nindent 12 }}
      {{- with .Values.querier.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.querier.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.querier.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}

