{{- /*
See comments in ./statefulset.yaml about configuring this as a headless service.  

N.B. Some systems  (e.g. old versions of Istio) do not play well with headless services 
so it's possible to configure this to be a standard service, rather than a headless one.
See `service.receiver.isHeadless`
*/}}

{{- if .Values.receiver.enabled -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ include "prometheus-thanos.fullname" . }}-receiver
{{- if .Values.service.receiver.annotations }}
  annotations:
{{ toYaml .Values.service.receiver.annotations | indent 4 }}
{{- end }}
  labels:
    app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-receiver
    helm.sh/chart: {{ include "prometheus-thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  {{- if .Values.service.receiver.isHeadless }}
  clusterIP: None
  {{- end }}
  ports:
    - port: {{ .Values.service.receiver.http.port }}
      targetPort: http
      protocol: TCP
      name: http
    - port: {{ .Values.service.receiver.httpRemoteWrite.port }}
      targetPort: http-rw
      protocol: TCP
      name: http-rw
    - port: {{ .Values.service.receiver.grpc.port }}
      targetPort: grpc
      protocol: TCP
      name: grpc
  selector:
    app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-receiver
    app.kubernetes.io/instance: {{ .Release.Name }}
{{- end }}
