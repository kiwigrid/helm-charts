{{- if .Values.storeGateway.enabled -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "prometheus-thanos.fullname" . }}-store-gateway
  labels:
    app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-store-gateway
    helm.sh/chart: {{ include "prometheus-thanos.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.storeGateway.replicaCount }}
  updateStrategy:
    type: {{ .Values.storeGateway.updateStrategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-store-gateway
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "prometheus-thanos.fullname" . }}-store-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "prometheus-thanos.name" . }}-store-gateway
        app.kubernetes.io/instance: {{ .Release.Name }}
        prometheus-thanos-peer: "true"
        {{- with .Values.storeGateway.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "10902"
        {{- with .Values.storeGateway.additionalAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}-store-gateway
          imagePullPolicy: {{ .Values.storeGateway.image.pullPolicy }}
          image: "{{ .Values.storeGateway.image.repository }}:{{ .Values.storeGateway.image.tag }}"
          args:
          - store
          - --data-dir=/data
          - --log.level={{ .Values.storeGateway.logLevel }}
          - --index-cache-size={{ .Values.storeGateway.indexCacheSize }}
          - --chunk-pool-size={{ .Values.storeGateway.chunkPoolSize }}
          {{- range $key, $value := .Values.storeGateway.additionalFlags }}
          - --{{ $key }}{{if $value }}={{ $value }}{{end}}
          {{- end }}
          {{- if .Values.storeGateway.objStoreType }}
          - |
            --objstore.config=type: {{ .Values.storeGateway.objStoreType }} 
            config:
            {{- toYaml .Values.storeGateway.objStoreConfig | nindent 14 }}
          {{- end }}
          ports:
            - name: http
              containerPort: 10902
              protocol: TCP
            - name: grpc
              containerPort: 10901
              protocol: TCP
          {{- if .Values.storeGateway.extraEnv }}
          env:
            {{- toYaml .Values.storeGateway.extraEnv | nindent 12 }}  
          {{- end }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: {{ .Values.storeGateway.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.storeGateway.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.storeGateway.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.storeGateway.livenessProbe.timeoutSeconds }}
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: {{ .Values.storeGateway.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.storeGateway.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.storeGateway.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.storeGateway.readinessProbe.timeoutSeconds }}
          resources:
            {{- toYaml .Values.storeGateway.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /data
              name: storage-volume
          {{- with .Values.storeGateway.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.storeGateway.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.storeGateway.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.storeGateway.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.storeGateway.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- if .Values.storeGateway.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
        {{- if .Values.storeGateway.persistentVolume.annotations }}
        annotations:
{{ toYaml .Values.storeGateway.persistentVolume.annotations | indent 10 }}
        {{- end }}
      spec:
        accessModes:
{{ toYaml .Values.storeGateway.persistentVolume.accessModes | indent 10 }}
        resources:
          requests:
            storage: "{{ .Values.storeGateway.persistentVolume.size }}"
      {{- if .Values.storeGateway.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.storeGateway.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.storeGateway.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
        - name: storage-volume
          emptyDir: {}
{{- end }}
{{- end }}
