# Default values for prometheus-thanos.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

service:
  querier:
    type: ClusterIP
    http:
      port: 9090
    grpc:
      port: 10901
  storeGateway:
    type: ClusterIP
    http:
      port: 9090
    grpc:
      port: 10901
  ruler:
    type: ClusterIP
    http:
      port: 9090
    grpc:
      port: 10901

querier:
  replicaCount: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  image:
    repository: quay.io/thanos/thanos
    tag: v0.7.0
    pullPolicy: IfNotPresent
  additionalLabels: {}
  additionalAnnotations: {}
  replicaLabel: replica
  logLevel: info
  stores: []
  additionalFlags: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
storeGateway:
  replicaCount: 1
  updateStrategy: RollingUpdate
  image:
    repository: quay.io/thanos/thanos
    tag: v0.7.0
    pullPolicy: IfNotPresent
  additionalLabels: {}
  additionalAnnotations: {}
  extraEnv: []
  # - name: GOOGLE_APPLICATION_CREDENTIALS
  #   value: /etc/gcp/secrets/credentials.json
  logLevel: info
  indexCacheSize: 500MB
  chunkPoolSize: 500MB

  objStoreType: GCS
  additionalFlags: {}
  objStoreConfig: {}
  ## GCS example
  #  bucket: demo-bucket

  ## S3 example
  #  bucket: demo-bucket
  #  access_key: smth
  #  secret_key: Need8Chars
  #  endpoint: a
  #  insecure: true
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  volumeMounts:
  volumes:
  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim: ""
    size: 2Gi
    storageClass: ""

compact:
  updateStrategy: RollingUpdate
  image:
    repository: quay.io/thanos/thanos
    tag: v0.7.0
    pullPolicy: IfNotPresent
  additionalLabels: {}
  additionalAnnotations: {}
  logLevel: info
  retentionResolutionRaw: 30d
  retentionResolution5m: 30d
  retentionResolution1h: 10y
  consistencyDelay: 30m
  additionalFlags: {}
  objStoreConfig: {}
  ## GCS example
  #  bucket: demo-bucket

  ## S3 example
  #  bucket: demo-bucket
  #  access_key: smth
  #  secret_key: Need8Chars
  #  endpoint: a
  #  insecure: true
  extraEnv: []
  # - name: GOOGLE_APPLICATION_CREDENTIALS
  #   value: /etc/gcp/secrets/credentials.json
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  volumeMounts:
  volumes:
  persistentVolume:
    enabled: false
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim: ""
    size: 2Gi


ruler:
  replicaCount: 1
  updateStrategy: RollingUpdate
  image:
    repository: quay.io/thanos/thanos
    tag: v0.7.0
    pullPolicy: IfNotPresent
  sidecar:
    enabled: false
    watchLabel: thanos_alert_config
    image:
      repository: kiwigrid/k8s-configmap-watcher
      tag: 0.1.0
      pullPolicy: IfNotPresent
  replicaLabel: replica
  logLevel: info
  ## Ruler configuration
  ## ref: https://thanos.io/components/rule.md/#flags
  queries: []
  clusterName:
  alertmanagerUrl: http://localhost
  evalInterval: 1m
  ruleFile: /etc/thanos-ruler/**/*-rules.yaml
  objStoreConfig: {}
  ## GCS example
  #  bucket: demo-bucket

  ## S3 example
  #  bucket: demo-bucket
  #  access_key: smth
  #  secret_key: Need8Chars
  #  endpoint: a
  #  insecure: true
  config: {}
  #  groups:
  #  - name: metamonitoring
  #    rules:
  #    - alert: PrometheusReplicaDown
  #      annotations:
  #        message: Prometheus replica in cluster {{ $labels.cluster }} has disappeared from Prometheus target discovery.
  #        runbook_url: https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusdown
  #      expr: absent(up{job="prometheus"})
  #      for: 15s # for demo purposes
  #      labels:
  #        severity: critical
  additionalFlags: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30

  persistentVolume:
    enabled: true
    accessModes:
      - ReadWriteOnce
    annotations: {}
    existingClaim: ""
    size: 2Gi
    storageClass: ""

## this is only for test support dont use this in production
minio:
  enabled: false
any-resource:
  enabled: false
